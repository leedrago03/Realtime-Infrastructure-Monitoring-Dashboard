version: '3.8'

services:
  dashboard:
    build: .
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1G

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    read_only: true
    networks:
      - monitoring
    environment:
      - TZ=UTC
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - monitoring
    privileged: true
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

volumes:
  prometheus_data:
    driver: local

networks:
  monitoring:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.default_bridge: true